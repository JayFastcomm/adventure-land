{"code":"window.bots=function(t){var e={};function n(r){if(e[r])return e[r].exports;var s=e[r]={i:r,l:!1,exports:{}};return t[r].call(s.exports,s,s.exports,n),s.l=!0,s.exports}return n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&\"object\"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,\"default\",{enumerable:!0,value:t}),2&e&&\"string\"!=typeof t)for(var s in t)n.d(r,s,function(e){return t[e]}.bind(null,s));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,\"a\",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p=\"\",n(n.s=7)}([function(t,e,n){\"use strict\";n.d(e,\"a\",(function(){return r}));const r=\"bee\"},function(t,e,n){\"use strict\";n.d(e,\"a\",(function(){return r}));const r={bee:{priority:300},crab:{priority:100},goo:{priority:500},osnake:{priority:1},snake:{priority:1},squig:{priority:1},squigtoad:{priority:1}}},function(t,e,n){\"use strict\";n.d(e,\"a\",(function(){return r}));const r=t=>parent.entities[t]},,,,,function(t,e,n){\"use strict\";n.r(e),n.d(e,\"Warrior\",(function(){return h}));var r=n(0),s=n(1),i=n(2),a={entities:[]},o={addItem(t,e){t.commit(\"addItem\",e)},viewItem(t,e){t.commit(\"viewItem\",e)}},c={addItem:(t,e)=>(t.entities.push(e),t),addEvent:(t,e)=>(t.events.push(e),t),updateEvent(t,e){t.events[e.event.id]=e},updateItem(t,e){t.entities[e.monster.id]=e},viewItem:(t,e)=>(t.entities[e],t)};class u{constructor(){this.events={}}subscribe(t,e){let n=this;return n.events.hasOwnProperty(t)||(n.events[t]=[]),n.events[t].push(e)}publish(t,e={}){return this.events.hasOwnProperty(t)?this.events[t].map(t=>t(e)):[]}}var g=new class{constructor(t){let e=this;e.actions={},e.mutations={},e.state={},e.status=\"resting\",e.events=new u,t.hasOwnProperty(\"actions\")&&(e.actions=t.actions),t.hasOwnProperty(\"mutations\")&&(e.mutations=t.mutations),e.state=new Proxy(t.state||{},{set:function(t,n,r){return t[n]=r,console.log(`stateChange: ${n}: ${r}`),e.events.publish(\"stateChange\",e.state),\"mutation\"!==e.status&&console.warn(\"You should use a mutation to set \"+n),e.status=\"resting\",!0}})}dispatch(t,e){return\"function\"!=typeof this.actions[t]?(console.error(`Action \"${t} doesn't exist.`),!1):(console.groupCollapsed(\"ACTION: \"+t),this.status=\"action\",this.actions[t](this,e),console.groupEnd(),!0)}commit(t,e){if(\"function\"!=typeof this.mutations[t])return console.log(`Mutation \"${t}\" doesn't exist`),!1;this.status=\"mutation\";let n=this.mutations[t](this.state,e);return this.state=Object.assign(this.state,n),!0}}({actions:o,mutations:c,state:a});class h{constructor(){this.state=a,this.store=g,this.ticks=1,this.mainTarget=r.a,this.minTargetDistance=100,this.targetPriority=s.a,this.attackMode=!0,this.filterCriteria=\"mtype\",this.targetMaxRange=4,this.targets=[\"goo\"];const t=get_socket();game_log(\"in constructor\"),t.on(\"entities\",t=>{game_log(\"new entity\"),this.processSocketData(t,\"entity\")}),game.on(\"event\",t=>{game_log(\"new event\"),this.processSocketData(t,\"event\")})}mainLoop(){game_log(\"main loop\"),character.on(\"incoming\",t=>{this.attack(t.actor)}),setInterval(()=>{a.entities.forEach(t=>{const e=Object.keys(t)[0];console.log(\"entityId:\"+e);const n=a.entities[e];console.log(\"record: \"+n),console.log(a.entities)}),this.attackMode&&!parent.character.rip&&(this.detectMainTarget(),use_hp_or_mp(),loot())},Math.max(1e3,parent.character.ping))}detectMainTarget(){}attack(t){this.currentTarget=t?Object(i.a)(t):this.currentTarget,this.currentTarget&&(game_log(\"attacking: \"+this.currentTarget.id),is_in_range(this.currentTarget,\"attack\")||is_moving(parent.character)?can_attack(this.currentTarget)&&(set_message(\"Attacking\"),attack(this.currentTarget).then(t=>{game_log(\"success attack\"),reduce_cooldown(\"attack\",Math.max(250,parent.character.ping))},t=>{game_log(\"error: \"+t.reason)})):this.moveLoop())}moveLoop(){can_move_to(this.currentTarget.real_x,this.currentTarget.real_y)&&xmove(parent.character.real_x+(this.currentTarget.real_x-parent.character.real_x),parent.character.real_y+(this.currentTarget.real_y-parent.character.real_y))}allDocuments(){show_json(a)}processSocketData(t,e){\"entity\"==e?t.monsters.forEach(t=>{game_log(\"incoming monsterId: \"+t.id),game_log(\"current entities in state: \"+a.entities.length);a.entities[t.id]?(game_log(\"exsists, updating \"+t.id),this.store.dispatch(\"updateItem\",{[t.id]:t})):(game_log(\"new record adding \"+t.id),this.store.dispatch(\"addItem\",{[t.id]:t}))}):(game_log(\"incoming event: \"+t.id),this.store.dispatch(\"addEvent\",{[t.id]:t}))}}(new h).mainLoop()}]);","extractedComments":[]}