{"code":"window.bots=function(t){var r={};function e(a){if(r[a])return r[a].exports;var n=r[a]={i:a,l:!1,exports:{}};return t[a].call(n.exports,n,n.exports,e),n.l=!0,n.exports}return e.m=t,e.c=r,e.d=function(t,r,a){e.o(t,r)||Object.defineProperty(t,r,{enumerable:!0,get:a})},e.r=function(t){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})},e.t=function(t,r){if(1&r&&(t=e(t)),8&r)return t;if(4&r&&\"object\"==typeof t&&t&&t.__esModule)return t;var a=Object.create(null);if(e.r(a),Object.defineProperty(a,\"default\",{enumerable:!0,value:t}),2&r&&\"string\"!=typeof t)for(var n in t)e.d(a,n,function(r){return t[r]}.bind(null,n));return a},e.n=function(t){var r=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(r,\"a\",r),r},e.o=function(t,r){return Object.prototype.hasOwnProperty.call(t,r)},e.p=\"\",e(e.s=5)}([function(t,r,e){\"use strict\";e.d(r,\"a\",(function(){return a}));const a=\"goo\"},function(t,r,e){\"use strict\";e.d(r,\"a\",(function(){return a}));const a={bee:{priority:300},crab:{priority:100},goo:{priority:500},osnake:{priority:1},snake:{priority:1},squig:{priority:1},squigtoad:{priority:1}}},,,,function(t,r,e){\"use strict\";e.r(r),e.d(r,\"Warrior\",(function(){return i}));var a=e(0),n=e(1);class i{constructor(){this.mainTarget=a.a,this.minTargetDistance=50,this.targetPriority=n.a,this.attackMode=!0,this.filterCriteria=\"mtype\"}mainLoop(){setInterval(()=>{!this.attackMode||parent.character.rip||is_moving(parent.character)||(game_log(\"--------------------\"),game_log(\"--------------------\"),this.currentTarget&&this.currentTarget.rip?(game_log(\"monster is dead, waiting for new monster\"),this.currentTarget=null):game_log(\"target still alive or no targer: hp:\"+(this.currentTarget?this.currentTarget.hp:\"nope\")),use_hp_or_mp(),loot(),this.detectMainTarget(),this.currentTarget&&(game_log(\"apparently current target:\"+this.currentTarget.name),is_in_range(this.currentTarget,\"attack\")?can_attack(this.currentTarget)&&(set_message(\"Attacking\"),attack(this.currentTarget).then(t=>{reduce_cooldown(\"attack\",parent.character.ping)})):(game_log(\"moving to current target\"),game_log(`x: ${parent.character.x}, y: ${parent.character.y}`),game_log(`targetX: ${this.currentTarget.x}, targetY: ${this.currentTarget.y}`),move(parent.character.x+(this.currentTarget.x-parent.character.x)/2,parent.character.y+(this.currentTarget.y-parent.character.y)/2),game_log(\"move towards current target\"),game_log(`targetX: ${this.currentTarget.x}, targetY: ${this.currentTarget.y}`))))},Math.max(1e3,parent.character.ping))}detectMainTarget(){try{Object.keys(parent.entities).filter(t=>parent.distance(parent.character,parent.entities[t])<this.minTargetDistance&&\"monster\"==parent.entities[t].type&&\"goo\"==parent.entities[t].mtype).reduce((t,r)=>this.currentTarget=parent.entities[r],{})}catch(t){game_log(\"error: \"+t.reason)}}}(new i).mainLoop()}]);","extractedComments":[]}