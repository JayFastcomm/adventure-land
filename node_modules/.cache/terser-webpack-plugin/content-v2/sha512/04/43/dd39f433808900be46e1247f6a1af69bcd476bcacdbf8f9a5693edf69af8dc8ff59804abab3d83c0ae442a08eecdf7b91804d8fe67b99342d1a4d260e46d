{"code":"window.bots=function(t){var e={};function r(n){if(e[n])return e[n].exports;var a=e[n]={i:n,l:!1,exports:{}};return t[n].call(a.exports,a,a.exports,r),a.l=!0,a.exports}return r.m=t,r.c=e,r.d=function(t,e,n){r.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},r.r=function(t){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})},r.t=function(t,e){if(1&e&&(t=r(t)),8&e)return t;if(4&e&&\"object\"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,\"default\",{enumerable:!0,value:t}),2&e&&\"string\"!=typeof t)for(var a in t)r.d(n,a,function(e){return t[e]}.bind(null,a));return n},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,\"a\",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p=\"\",r(r.s=6)}([function(t,e,r){\"use strict\";r.d(e,\"a\",(function(){return n}));const n=\"goo\"},function(t,e,r){\"use strict\";r.d(e,\"a\",(function(){return n}));const n={bee:{priority:300},crab:{priority:100},goo:{priority:500},osnake:{priority:1},snake:{priority:1},squig:{priority:1},squigtoad:{priority:1}}},,,,,function(t,e,r){\"use strict\";r.r(e),r.d(e,\"Warrior\",(function(){return i}));var n=r(0),a=r(1);class i{constructor(){this.ticks=1,this.mainTarget=n.a,this.minTargetDistance=100,this.targetPriority=a.a,this.attackMode=!0,this.filterCriteria=\"mtype\"}mainLoop(){setInterval(()=>{if(this.ticks++,this.attackMode&&!parent.character.rip&&!is_moving(parent.character)){if(!this.currentTarget||0==this.currentTarget.hp)return this.detectMainTarget();this.currentTarget&&0==this.currentTarget.hp&&(game_log(\"monster is dead, waiting for new monster\"),this.currentTarget=null),use_hp_or_mp(),loot(),this.currentTarget&&(is_in_range(this.currentTarget,\"attack\")?can_attack(this.currentTarget)&&(set_message(\"Attacking\"),attack(this.currentTarget).then(t=>{game_log(\"success attack\"),reduce_cooldown(\"attack\",parent.character.ping)},t=>{game_log(\"error: \"+t.reason)})):xmove(this.currentTarget.x,this.currentTarget.y))}},Math.max(250,parent.character.ping))}detectMainTarget(){const t=[];try{const e=Object.keys(parent.entities).filter(t=>\"monster\"==parent.entities[t].type&&parent.entities[t].mtype==this.mainTarget&&parent.entities[t].visible).reduce((t,e)=>(t[e]=parent.entities[e],t),{});e&&Object.keys(e).forEach(r=>{const n=((t,e,r,n)=>{const a=r-2*t+n-2*e;return Math.sqrt(Math.abs(a))})(parent.character.x,parent.character.y,e[r].x,e[r].y);t.push({target:e[r],distance:n});const a=t.find(t=>Math.min(t.distance));game_log(`target decided as: [${this.currentTarget.id}: ${this.currentTarget.hp}]`),this.currentTarget=a.target})}catch(t){game_log(\"main target error: \"+t)}}}(new i).mainLoop()}]);","extractedComments":[]}