{"code":"window.bots=function(t){var e={};function r(a){if(e[a])return e[a].exports;var n=e[a]={i:a,l:!1,exports:{}};return t[a].call(n.exports,n,n.exports,r),n.l=!0,n.exports}return r.m=t,r.c=e,r.d=function(t,e,a){r.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:a})},r.r=function(t){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})},r.t=function(t,e){if(1&e&&(t=r(t)),8&e)return t;if(4&e&&\"object\"==typeof t&&t&&t.__esModule)return t;var a=Object.create(null);if(r.r(a),Object.defineProperty(a,\"default\",{enumerable:!0,value:t}),2&e&&\"string\"!=typeof t)for(var n in t)r.d(a,n,function(e){return t[e]}.bind(null,n));return a},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,\"a\",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p=\"\",r(r.s=5)}([function(t,e,r){\"use strict\";r.d(e,\"a\",(function(){return a}));const a=\"bee\"},function(t,e,r){\"use strict\";r.d(e,\"a\",(function(){return a}));const a={bee:{priority:300},crab:{priority:100},goo:{priority:500},osnake:{priority:1},snake:{priority:1},squig:{priority:1},squigtoad:{priority:1}}},function(t,e,r){\"use strict\";r.d(e,\"a\",(function(){return a}));const a=t=>parent.entities[t]},function(t,e,r){\"use strict\";r.d(e,\"a\",(function(){return a}));const a=(t,e,r,a)=>{const n=(e-a)*e-a,i=(t-r)*t-r,c=Math.pow(Math.sqrt(Math.abs(n+i)),.5);return game_log(\"distance to entity: \"+c),c}},,function(t,e,r){\"use strict\";r.r(e),r.d(e,\"Warrior\",(function(){return o}));var a=r(0),n=r(1),i=r(3),c=r(2);class o{constructor(){this.ticks=1,this.mainTarget=a.a,this.minTargetDistance=100,this.targetPriority=n.a,this.attackMode=!0,this.filterCriteria=\"mtype\",this.targetMaxRange=50,this.targets=[\"bee\",\"goo\"]}mainLoop(){character.on(\"incoming\",t=>{this.attack(t.actor)}),setInterval(()=>{game_log(\"##########\"),game_log(\"[TICK: \"+this.ticks++),this.attackMode&&!parent.character.rip&&(this.detectMainTarget(),use_hp_or_mp(),loot(),this.currentTarget&&this.attack(),game_log(\"##########\"))},Math.max(250,parent.character.ping))}detectMainTarget(){const t=[];try{const e=Object.keys(parent.entities).filter(t=>parent.entities[t].visible&&this.targets.includes(parent.entities[t].mtype)&&parent.entities[t].attack<20&&Object(i.a)(parent.character.x,parent.character.y,parent.entities[t].x,parent.entities[t].y)<this.targetMaxRange).reduce((t,e)=>(t[e]=parent.entities[e],t),{});if(e){Object.keys(e).forEach(r=>{const a=Object(i.a)(parent.character.x,parent.character.y,e[r].x,e[r].y);t.push({target:e[r],distance:a}),game_log(`[filtered: target: ${e[r].name},\\n            distance: ${a}]`)});const r=t.find(t=>Math.min(t.distance));r&&(game_log(\"targetObject: \"+r.target),this.currentTarget=r.target,game_log(`target decided as: [${this.currentTarget&&this.currentTarget.id}: ${this.currentTarget&&this.currentTarget.hp}]`),game_log(`with a distance of: [${r.distance}]`),game_log(`target: [${r.target.name}]`))}}catch(t){game_log(\"main target error: \"+t)}}attack(t){this.currentTarget=t?Object(c.a)(t):this.currentTarget,this.currentTarget&&(is_in_range(this.currentTarget,\"attack\")?can_attack(this.currentTarget)&&(set_message(\"Attacking\"),attack(this.currentTarget).then(t=>{game_log(\"success attack\"),reduce_cooldown(\"attack\",Math.max(250,parent.character.ping))},t=>{game_log(\"error: \"+t.reason)})):move(this.currentTarget.x,this.currentTarget.y))}}(new o).mainLoop()}]);","extractedComments":[]}